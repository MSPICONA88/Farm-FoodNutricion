{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Usuario } from 'src/app/Interfaces/usuario';\nlet UserComponent = class UserComponent {\n  constructor(userService, rolService, router, formBuilder) {\n    this.userService = userService;\n    this.rolService = rolService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.usuario = {};\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.formularioGroup = this.formBuilder.group({\n      nombre_apellido: ['', [Validators.minLength(3), Validators.maxLength(100), Validators.required]],\n      usuario: ['', [Validators.minLength(3), Validators.maxLength(80), Validators.required]],\n      password: [],\n      email: ['', [Validators.email, Validators.required]],\n      id_rol: ['', Validators.required]\n    });\n    this.usuario = new Usuario();\n    this.subscription.add(this.rolService.getAllRoles().subscribe({\n      next: listado => {\n        this.roles = listado;\n      },\n      error: () => {\n        alert('error al obtener roles');\n      }\n    }));\n  }\n  guardar() {\n    if (this.formularioGroup.valid) {\n      this.subscription.add(this.userService.postCreate(this.usuario).subscribe({\n        next: () => {\n          this.irAHome();\n        },\n        error: () => {\n          alert('error al guardar');\n        }\n      }));\n    }\n  }\n  cancelar() {\n    this.irAHome();\n  }\n  irAHome() {\n    this.router.navigate(['']);\n  }\n  get controlNombre() {\n    return this.formularioGroup.controls['nombre_apellido'];\n  }\n  get controlUsuario() {\n    return this.formularioGroup.controls['usuario'];\n  }\n  get controlPassword() {\n    return this.formularioGroup.controls['password'];\n  }\n  get controlEmail() {\n    return this.formularioGroup.controls['email'];\n  }\n  get controlRol() {\n    return this.formularioGroup.controls['id_rol'];\n  }\n};\nUserComponent = __decorate([Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})], UserComponent);\nexport { UserComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","Subscription","Usuario","UserComponent","constructor","userService","rolService","router","formBuilder","ngOnInit","formularioGroup","group","nombre_apellido","minLength","maxLength","required","usuario","password","email","id_rol","subscription","add","getAllRoles","subscribe","next","listado","roles","error","alert","guardar","valid","postCreate","irAHome","cancelar","navigate","controlNombre","controls","controlUsuario","controlPassword","controlEmail","controlRol","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Componentes\\user\\user.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Rol } from 'src/app/Interfaces/rol';\nimport { Usuario } from 'src/app/Interfaces/usuario';\nimport { RolService } from 'src/app/Services/Usuario/Rol/rol.service';\nimport { UsuarioService } from 'src/app/Services/Usuario/Usuario/usuario.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent {\n\n  formularioGroup: FormGroup;\n  usuario: Usuario = {} as Usuario;\n  roles: Rol[];\n  \n  private subscription = new Subscription();\n\n  constructor(\n    private userService: UsuarioService,\n    private rolService: RolService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n\n    this.formularioGroup= this.formBuilder.group({\n      nombre_apellido: ['', [Validators.minLength(3), Validators.maxLength(100), Validators.required]],\n      usuario: ['', [Validators.minLength(3), Validators.maxLength(80), Validators.required]],\n      password: [],\n      email: ['', [Validators.email,Validators.required]],\n      id_rol: ['', Validators.required]\n    })\n\n    this.usuario = new Usuario();\n\n    this.subscription.add(\n      this.rolService.getAllRoles().subscribe({\n        next: (listado: Rol[]) => {\n          this.roles = listado;\n        },\n        error: () => {\n          alert('error al obtener roles');\n        },\n      })\n    );\n\n    \n  }\n\n  guardar() {\n    if (this.formularioGroup.valid) {\n      this.subscription.add(\n        this.userService.postCreate(this.usuario).subscribe({\n          next: () => {\n            this.irAHome();\n          },\n          error: () => {\n            alert('error al guardar');\n          },\n        })\n      );\n    }\n  }\n\n  cancelar() {\n    this.irAHome();\n  }\n\n  private irAHome() {\n    this.router.navigate(['']);\n  }\n\n  get controlNombre() : FormControl{\n    return this.formularioGroup.controls['nombre_apellido'] as FormControl\n  }\n\n  get controlUsuario() : FormControl{\n    return this.formularioGroup.controls['usuario'] as FormControl\n  }\n\n  get controlPassword() : FormControl{\n    return this.formularioGroup.controls['password'] as FormControl\n  }\n\n  get controlEmail() : FormControl{\n    return this.formularioGroup.controls['email'] as FormControl\n  }\n\n  get controlRol() : FormControl{\n    return this.formularioGroup.controls['id_rol'] as FormControl\n  }\n\n\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}