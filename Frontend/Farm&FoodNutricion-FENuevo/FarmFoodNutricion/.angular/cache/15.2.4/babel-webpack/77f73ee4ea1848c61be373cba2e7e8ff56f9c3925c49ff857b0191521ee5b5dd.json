{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class UsuarioService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrlBase = environment.baseUrl + \"/api/usuario\";\n    this.userMapping = [\"administrador\", \"veterinario\", \"operario\"];\n  }\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n  getRol() {\n    return localStorage.getItem(\"userRol\");\n  }\n  getUserName() {\n    return localStorage.getItem(\"userName\");\n  }\n  /* TOKEN SERVICES */\n  setToken(token, userName, rol) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userName\", userName);\n    localStorage.setItem(\"userRol\", rol);\n  }\n  /* AUTHENTICATION SERVICES */\n  authenticateUser(view) {\n    let token = this.getToken();\n    if (token != \"\" && token != null) {\n      let rol = this.getRol();\n      var viewRol = view.concat('_').concat(rol);\n      if (this.userMapping.includes(viewRol)) {\n        return true;\n      }\n      return false;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;;AAK1D,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB,EAC1BC,MAAc;IADJ,SAAI,GAAJD,IAAI;IACd,WAAM,GAANC,MAAM;IAEhB,eAAU,GAAWJ,WAAW,CAACK,OAAO,GAAG,cAAc;IACzD,gBAAW,GAAc,CAAC,eAAe,EAAE,aAAa,EAAE,UAAU,CAAC;EAHzC;EAK5BC,QAAQ;IACN,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,MAAM;IACJ,OAAOF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EACxC;EAEAE,WAAW;IACT,OAAOH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACzC;EACA;EACAG,QAAQ,CAACC,KAAa,EAAEC,QAAgB,EAAEC,GAAW;IACnDP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IACpCL,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;IAC1CN,YAAY,CAACQ,OAAO,CAAC,SAAS,EAAED,GAAG,CAAC;EAEtC;EAEA;EACAE,gBAAgB,CAACC,IAAY;IAC3B,IAAIL,KAAK,GAAG,IAAI,CAACN,QAAQ,EAAE;IAC3B,IAAGM,KAAK,IAAI,EAAE,IAAIA,KAAK,IAAI,IAAI,EAAE;MAC/B,IAAIE,GAAG,GAAG,IAAI,CAACL,MAAM,EAAE;MACvB,IAAIS,OAAO,GAAGD,IAAI,CAACE,MAAM,CAAC,GAAG,CAAC,CAACA,MAAM,CAACL,GAAG,CAAC;MAC1C,IAAG,IAAI,CAACM,WAAW,CAACC,QAAQ,CAACH,OAAO,CAAC,EAAE;QACrC,OAAO,IAAI;;MAEb,OAAO,KAAK;KACb,MAAM;MACL,IAAI,CAACd,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAzCWrB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAsB,SAAdtB,cAAc;EAAAuB,YAFb;AAAM","names":["environment","UsuarioService","constructor","http","router","baseUrl","getToken","localStorage","getItem","getRol","getUserName","setToken","token","userName","rol","setItem","authenticateUser","view","viewRol","concat","userMapping","includes","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Services\\Usuario\\Usuario\\usuario.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  constructor(private http: HttpClient, \n    private router: Router) { }\n\n  apiUrlBase: string = environment.baseUrl + \"/api/usuario\";\n  userMapping : string[] = [\"administrador\", \"veterinario\", \"operario\"];\n\n  getToken() : any {\n    return localStorage.getItem(\"token\");\n  }\n\n  getRol() : any {\n    return localStorage.getItem(\"userRol\");\n  }\n\n  getUserName() : any {\n    return localStorage.getItem(\"userName\");\n  }\n  /* TOKEN SERVICES */\n  setToken(token: string, userName: string, rol: string) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userName\", userName);\n    localStorage.setItem(\"userRol\", rol);\n   \n  }\n  \n  /* AUTHENTICATION SERVICES */\n  authenticateUser(view: string) {\n    let token = this.getToken();\n    if(token != \"\" && token != null) {\n      let rol = this.getRol();\n      var viewRol = view.concat('_').concat(rol);\n      if(this.userMapping.includes(viewRol)) {\n        return true;\n      }\n      return false;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}