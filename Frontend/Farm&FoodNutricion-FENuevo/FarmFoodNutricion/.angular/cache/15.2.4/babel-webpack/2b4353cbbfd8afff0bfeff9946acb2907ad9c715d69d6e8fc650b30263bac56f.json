{"ast":null,"code":"import { HttpStatusCode } from '@angular/common/http';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Services/Usuario/Login/login.service\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router, loginServ) {\n    this.router = router;\n    this.loginServ = loginServ;\n    this.user = {};\n  }\n  ngOnInit() {}\n  // login() {\n  //   if(this.validateParams()) {\n  // \t\tthis.loginServ.postLogin(this.user.usuario, this.user.password).subscribe((data)=>{\n  //       if(data.ok && this.user && this.user.id_usuario){\n  //         this.loginServ.setToken(this.user.id_usuario.toString(), this.user.usuario, \n  //         this.user.nombre_rol);\n  //         Swal.fire({\n  //           title: 'Bienvenido',\n  //           icon: 'warning',\n  //           confirmButtonText: \"Ok\",\n  //         });\n  //         this.router.navigate(['/home']);\n  //       }\n  //       else{\n  //       }\n  //       error: (err: HttpErrorResponse) => {\n  //         if(err.status == HttpStatusCode.NotFound) {\n  //           Swal.fire({\n  //             title: 'Usuario y/o contraseña incorrecta',\n  //             icon: 'warning',\n  //             confirmButtonText: \"Ok\",\n  //           });\n  //         }\n  //         if(err.status == HttpStatusCode.InternalServerError) {\n  //           Swal.fire({\n  //             title: 'Error en el Servicio',\n  //             icon: 'error',\n  //             confirmButtonText: \"Ok\",\n  //         });\n  //       }\n  //     }\n  //     })\n  //   } else {\n  //     Swal.fire({\n  //       title: 'Ingrese nombre de usuario y contraseña',\n  //       icon: 'warning',\n  //       confirmButtonText: \"Ok\",\n  //     });\n  //   }\n  // }\n  // validateParams() : boolean {\n  //   if(this.user.usuario != null && this.user.usuario != \"\" &&\n  //       this.user.password != null && this.user.password != \"\") {\n  //         return true;\n  //   }\n  //   return false;\n  // }\n  login() {\n    if (this.validateParams()) {\n      this.loginServ.postLogin(this.user.usuario, this.user.password).subscribe(data => {\n        if (data.ok && data.id_usuario) {\n          this.loginServ.setToken(data.IdUsuario.toString(), data.nombreUsuario, data.rol);\n          Swal.fire({\n            title: 'Bienvenido',\n            icon: 'warning',\n            confirmButtonText: 'Ok'\n          }).then(() => {\n            this.router.navigate(['/home']);\n          });\n        } else {\n          Swal.fire({\n            title: 'Ocurrió un error',\n            text: 'No se pudo obtener el ID de usuario',\n            icon: 'error',\n            confirmButtonText: 'Ok'\n          });\n        }\n      }, err => {\n        if (err.status == 404 /* HttpStatusCode.NotFound */) {\n          Swal.fire({\n            title: 'Usuario y/o contraseña incorrecta',\n            icon: 'warning',\n            confirmButtonText: 'Ok'\n          });\n        }\n        if (err.status == 500 /* HttpStatusCode.InternalServerError */) {\n          Swal.fire({\n            title: 'Error en el Servicio',\n            icon: 'error',\n            confirmButtonText: 'Ok'\n          });\n        }\n      });\n    } else {\n      Swal.fire({\n        title: 'Ingrese nombre de usuario y contraseña',\n        icon: 'warning',\n        confirmButtonText: 'Ok'\n      });\n    }\n  }\n  validateParams() {\n    if (this.user.usuario != null && this.user.usuario != '' && this.user.password != null && this.user.password != '') {\n      return true;\n    }\n    return false;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"mb-3\"], [\"for\", \"usuario\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"usuario\", \"id\", \"usuario\", \"aria-describedby\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\");\n      i0.ɵɵelement(2, \"br\")(3, \"br\");\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.user.usuario = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"div\", 6);\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.usuario);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpStatusCode","Swal","LoginComponent","constructor","router","loginServ","ngOnInit","login","validateParams","postLogin","user","usuario","password","subscribe","data","ok","id_usuario","setToken","IdUsuario","toString","nombreUsuario","rol","fire","title","icon","confirmButtonText","then","navigate","text","err","status","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Componentes\\login\\login.component.ts","C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Componentes\\login\\login.component.html"],"sourcesContent":["import { HttpErrorResponse, HttpStatusCode } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/Interfaces/usuario';\nimport { LoginService } from 'src/app/Services/Usuario/Login/login.service';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\n  user = {} as Usuario;\n\n  constructor(private router:Router, private loginServ: LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  // login() {\n  //   if(this.validateParams()) {\n\t// \t\tthis.loginServ.postLogin(this.user.usuario, this.user.password).subscribe((data)=>{\n  //       if(data.ok && this.user && this.user.id_usuario){\n           \n  //         this.loginServ.setToken(this.user.id_usuario.toString(), this.user.usuario, \n  //         this.user.nombre_rol);\n  //         Swal.fire({\n  //           title: 'Bienvenido',\n  //           icon: 'warning',\n  //           confirmButtonText: \"Ok\",\n  //         });\n  //         this.router.navigate(['/home']);\n  //       }\n  //       else{\n\n  //       }\n  //       error: (err: HttpErrorResponse) => {\n  //         if(err.status == HttpStatusCode.NotFound) {\n  //           Swal.fire({\n  //             title: 'Usuario y/o contraseña incorrecta',\n  //             icon: 'warning',\n  //             confirmButtonText: \"Ok\",\n  //           });\n  //         }\n  //         if(err.status == HttpStatusCode.InternalServerError) {\n  //           Swal.fire({\n  //             title: 'Error en el Servicio',\n  //             icon: 'error',\n  //             confirmButtonText: \"Ok\",\n  //         });\n\n  //       }\n\n  //     }\n  //     })\n  //   } else {\n  //     Swal.fire({\n  //       title: 'Ingrese nombre de usuario y contraseña',\n  //       icon: 'warning',\n  //       confirmButtonText: \"Ok\",\n  //     });\n  //   }\n  // }\n\n\n    // validateParams() : boolean {\n    //   if(this.user.usuario != null && this.user.usuario != \"\" &&\n    //       this.user.password != null && this.user.password != \"\") {\n    //         return true;\n    //   }\n    //   return false;\n    // }\n\n\n    login() {\n      if (this.validateParams()) {\n        this.loginServ.postLogin(this.user.usuario, this.user.password).subscribe(\n          (data: Usuario) => {\n            if (data.ok && data.id_usuario) {\n              this.loginServ.setToken(data.IdUsuario.toString(), data.nombreUsuario, data.rol);\n              Swal.fire({\n                title: 'Bienvenido',\n                icon: 'warning',\n                confirmButtonText: 'Ok',\n              }).then(() => {\n                this.router.navigate(['/home']);\n              });\n            } else {\n              Swal.fire({\n                title: 'Ocurrió un error',\n                text: 'No se pudo obtener el ID de usuario',\n                icon: 'error',\n                confirmButtonText: 'Ok',\n              });\n            }\n          },\n          (err: HttpErrorResponse) => {\n            if (err.status == HttpStatusCode.NotFound) {\n              Swal.fire({\n                title: 'Usuario y/o contraseña incorrecta',\n                icon: 'warning',\n                confirmButtonText: 'Ok',\n              });\n            }\n            if (err.status == HttpStatusCode.InternalServerError) {\n              Swal.fire({\n                title: 'Error en el Servicio',\n                icon: 'error',\n                confirmButtonText: 'Ok',\n              });\n            }\n          }\n        );\n      } else {\n        Swal.fire({\n          title: 'Ingrese nombre de usuario y contraseña',\n          icon: 'warning',\n          confirmButtonText: 'Ok',\n        });\n      }\n    }\n    \n    validateParams(): boolean {\n      if (\n        this.user.usuario != null &&\n        this.user.usuario != '' &&\n        this.user.password != null &&\n        this.user.password != ''\n      ) {\n        return true;\n      }\n      return false;\n    }\n    \n}\n\n\n  \n\n\n","<div class=\"container\">\n<form>\n    <br>\n    <br>\n    <div class=\"mb-3\">\n      <label for=\"usuario\" class=\"form-label\">Usuario</label>\n      <input type=\"text\" class=\"form-control\" name=\"usuario\" id=\"usuario\" [(ngModel)]=\"user.usuario\" aria-describedby=\"text\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"user.password\" id=\"password\">\n    </div>\n    <div class=\"mb-3 form-check\">\n      \n    </div>\n    <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">Submit</button>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}