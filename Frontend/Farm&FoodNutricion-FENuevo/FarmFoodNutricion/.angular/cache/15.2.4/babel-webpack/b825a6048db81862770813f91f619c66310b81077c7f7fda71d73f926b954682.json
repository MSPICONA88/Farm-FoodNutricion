{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class LoginService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrlBase = environment.baseUrl + \"/api/usuario\";\n    this.userMapping = [\"administrador\", \"veterinario\", \"operario\"];\n  }\n  postLogin(user, pass) {\n    const comando = {\n      \"username\": user,\n      \"password\": pass\n    };\n    const url = this.apiUrlBase + \"/login\";\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(comando);\n    return this.http.post(url, body, {\n      'headers': headers\n    });\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;;AAK1D,OAAM,MAAOC,YAAY;EAMvBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAJpD,eAAU,GAAWJ,WAAW,CAACK,OAAO,GAAG,cAAc;IACzD,gBAAW,GAAc,CAAC,eAAe,EAAE,aAAa,EAAE,UAAU,CAAC;EAGL;EAEhEC,SAAS,CAACC,IAAY,EAAEC,IAAY;IAClC,MAAMC,OAAO,GAAG;MACV,UAAU,EAAEF,IAAI;MAChB,UAAU,EAAEC;KACjB;IACD,MAAME,GAAG,GAAG,IAAI,CAACC,UAAU,GAAG,QAAQ;IACtC,MAAMC,OAAO,GAAG;MAAE,cAAc,EAAE;IAAkB,CAAE;IACtD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC;IAEpC,OAAO,IAAI,CAACN,IAAI,CAACa,IAAI,CAACN,GAAG,EAAEG,IAAI,EAAE;MAAE,SAAS,EAAED;IAAO,CAAE,CAAC;EAC1D;;AAlBWX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAgB,SAAZhB,YAAY;EAAAiB,YAFX;AAAM","names":["environment","LoginService","constructor","http","router","baseUrl","postLogin","user","pass","comando","url","apiUrlBase","headers","body","JSON","stringify","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Services\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  apiUrlBase: string = environment.baseUrl + \"/api/usuario\";\n  userMapping : string[] = [\"administrador\", \"veterinario\", \"operario\"];\n\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  postLogin(user: string, pass: string): Observable<any> {\n    const comando = {\n          \"username\": user,\n          \"password\": pass\n    }\n    const url = this.apiUrlBase + \"/login\";\n    const headers = { 'content-type': 'application/json' };\n    const body = JSON.stringify(comando);\n\n    return this.http.post(url, body, { 'headers': headers })\n  }\n  \n  /* TOKEN SERVICES */\n  // setToken(token: string, userName: string, rol: string) {\n  //   localStorage.setItem(\"token\", token);\n  //   localStorage.setItem(\"userName\", userName);\n  //   localStorage.setItem(\"userRol\", rol);\n   \n  // }\n\n  // getToken() : any {\n  //   return localStorage.getItem(\"token\");\n  // }\n\n  // getRol() : any {\n  //   return localStorage.getItem(\"userRol\");\n  // }\n\n  // getUserName() : any {\n  //   return localStorage.getItem(\"userName\");\n  // }\n\n \n\n  /* AUTHENTICATION SERVICES */\n  // authenticateUser(view: string) {\n  //   let token = this.getToken();\n  //   if(token != \"\" && token != null) {\n  //     let rol = this.getRol();\n  //     var viewRol = view.concat('_').concat(rol);\n  //     if(this.userMapping.includes(viewRol)) {\n  //       return true;\n  //     }\n  //     return false;\n  //   } else {\n  //     this.router.navigate(['login']);\n  //     return false;\n  //   }\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}