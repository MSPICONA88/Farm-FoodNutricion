{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/magal/OneDrive/Documents/GitHub/Farm-FoodNutricion/Frontend/Farm&FoodNutricion-FENuevo/FarmFoodNutricion/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { ComandoUsuario } from 'src/app/Interfaces/comandoUsuario';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Usuario/Usuario/usuario.service\";\nimport * as i2 from \"src/app/Services/Usuario/Rol/rol.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction UserComponent_form_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Nombre y Apellido es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_form_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Usuario es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_form_0_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Password es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_form_0_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Email es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_form_0_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rol_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", rol_r6.idRol);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", rol_r6.nombreRol, \" \");\n  }\n}\nfunction UserComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1)(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Nombre y Apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 4);\n    i0.ɵɵtemplate(5, UserComponent_form_0_div_5_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n    i0.ɵɵtext(9, \"Usuario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 7);\n    i0.ɵɵtemplate(11, UserComponent_form_0_div_11_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 8);\n    i0.ɵɵtext(15, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 9);\n    i0.ɵɵtemplate(17, UserComponent_form_0_div_17_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"br\");\n    i0.ɵɵelementStart(19, \"div\", 2)(20, \"label\", 10);\n    i0.ɵɵtext(21, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 11);\n    i0.ɵɵtemplate(23, UserComponent_form_0_div_23_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"br\");\n    i0.ɵɵelementStart(25, \"div\", 2)(26, \"label\", 12);\n    i0.ɵɵtext(27, \"Rol:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"select\", 13);\n    i0.ɵɵtemplate(29, UserComponent_form_0_option_29_Template, 2, 2, \"option\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(30, \"br\");\n    i0.ɵɵelementStart(31, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function UserComponent_form_0_Template_button_click_31_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.guardar());\n    });\n    i0.ɵɵtext(32, \"Guardar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function UserComponent_form_0_Template_button_click_33_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.cancelar());\n    });\n    i0.ɵɵtext(34, \"Cancelar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formularioGroup);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controlNombre.touched && ctx_r0.controlNombre.invalid);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controlUsuario.touched && ctx_r0.controlUsuario.hasError(\"required\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controlPassword.touched && ctx_r0.controlPassword.hasError(\"required\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controlEmail.touched && ctx_r0.controlEmail.hasError(\"required\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.listaRoles);\n  }\n}\nexport class UserComponent {\n  constructor(userService, rolService, router, formBuilder) {\n    this.userService = userService;\n    this.rolService = rolService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.usuario = new ComandoUsuario();\n    this.listaRoles = [];\n    this.subscription = new Subscription();\n    this.cargarRoles();\n  }\n  ngOnInit() {\n    this.formularioGroup = this.formBuilder.group({\n      nombreApellido: ['', [Validators.minLength(3), Validators.maxLength(100), Validators.required]],\n      usuario1: ['', [Validators.minLength(3), Validators.maxLength(80), Validators.required]],\n      password: ['', Validators.required],\n      email: ['', [Validators.email, Validators.required]],\n      idRol: [Validators.required]\n    });\n    this.usuario = new ComandoUsuario();\n    // this.subscription.add(\n    //   this.rolService.getAllRoles().subscribe({\n    //     next: (listado: Rol[]) => {\n    //       this.roles = listado;\n    //     },\n    //     error: () => {\n    //       alert('error al obtener roles');\n    //     },\n    //   })\n    // );\n  }\n\n  cargarRoles() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.subscription.add(_this.rolService.getAllRoles().subscribe(data => {\n        if (data.ok) {\n          _this.listaRoles = data.listaRoles;\n          //alert(this.listaRoles[0].nombreRol)\n        } else {\n          Swal.fire({\n            title: 'Error al obtener el listado de roles',\n            icon: 'error',\n            confirmButtonText: \"Ok\"\n          });\n        }\n      }));\n    })();\n  }\n  // guardar() {\n  //   if (this.formularioGroup.valid) {\n  //     console.log(this.usuario)\n  //     this.subscription.add(\n  //       this.userService.postCreate(this.formularioGroup).subscribe({\n  //         next: () => {\n  //           this.irAHome();\n  //         },\n  //         error: () => {\n  //           alert('error al guardar');\n  //         },\n  //       })\n  //     );\n  //   }\n  // }\n  guardar() {\n    if (this.formularioGroup.valid) {\n      this.usuario.nombreApellido = this.formularioGroup.value.nombreApellido;\n      this.usuario.usuario1 = this.formularioGroup.value.usuario1;\n      this.usuario.email = this.formularioGroup.value.email;\n      this.usuario.idRol = this.formularioGroup.value.idRol;\n      this.usuario.password = this.formularioGroup.value.password;\n      this.subscription.add(this.userService.postCreate(this.usuario).subscribe({\n        next: respuesta => {\n          if (respuesta.ok) {\n            Swal.fire({\n              title: 'Usuario cargado con éxito',\n              icon: 'success',\n              confirmButtonText: 'Ok'\n            }).then(() => {\n              this.cancelar();\n            });\n          } else {\n            alert('No se pudo crear el usuario');\n          }\n        },\n        error: err => {\n          console.error(err);\n          alert('Error al crear el usuario');\n        }\n      }));\n    }\n  }\n  cancelar() {\n    Swal.fire({\n      title: '¿Está seguro que quiere cancelar la operación?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si',\n      cancelButtonText: 'No'\n    }).then(result => {\n      this.router.navigate(['']);\n    });\n    this.irAHome();\n  }\n  irAHome() {\n    this.router.navigate(['']);\n  }\n  get controlNombre() {\n    return this.formularioGroup.controls['nombreApellido'];\n  }\n  get controlUsuario() {\n    return this.formularioGroup.controls['usuario1'];\n  }\n  get controlPassword() {\n    return this.formularioGroup.controls['password'];\n  }\n  get controlEmail() {\n    return this.formularioGroup.controls['email'];\n  }\n  get controlRol() {\n    return this.formularioGroup.controls['idRol'];\n  }\n}\nUserComponent.ɵfac = function UserComponent_Factory(t) {\n  return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.RolService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserComponent,\n  selectors: [[\"app-user\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"nombreApellido\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"nombreApellido\", \"id\", \"nombreApellido\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"for\", \"usuario1\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"usuario1\", \"id\", \"usuario1\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\"], [\"for\", \"idRol\", 1, \"form-label\"], [\"id\", \"idRol\", \"formControlName\", \"idRol\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [3, \"value\"]],\n  template: function UserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UserComponent_form_0_Template, 35, 6, \"form\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.formularioGroup.value);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Subscription","ComandoUsuario","Swal","i0","UserComponent","constructor","userService","rolService","router","formBuilder","cargarRoles","ngOnInit","formularioGroup","group","nombreApellido","minLength","maxLength","required","usuario1","password","email","idRol","usuario","subscription","add","getAllRoles","subscribe","data","ok","listaRoles","fire","title","icon","confirmButtonText","guardar","valid","value","postCreate","next","respuesta","then","cancelar","alert","error","err","console","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","result","navigate","irAHome","controlNombre","controls","controlUsuario","controlPassword","controlEmail","controlRol","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Componentes\\user\\user.component.ts","C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Componentes\\user\\user.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ComandoRoles } from 'src/app/Interfaces/comandoRoles';\nimport { ComandoUsuario } from 'src/app/Interfaces/comandoUsuario';\nimport { Rol } from 'src/app/Interfaces/rol';\nimport { Usuario } from 'src/app/Interfaces/usuario';\nimport { RolService } from 'src/app/Services/Usuario/Rol/rol.service';\nimport { UsuarioService } from 'src/app/Services/Usuario/Usuario/usuario.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent {\n\n  formularioGroup: FormGroup;\n  usuario: ComandoUsuario = new ComandoUsuario();\n  listaRoles: any = [];\n  \n  private subscription = new Subscription();\n  roles: Rol[];\n\n  constructor(\n    \n    private userService: UsuarioService,\n    private rolService: RolService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) { \n    this.cargarRoles();\n  }\n\n  ngOnInit(): void {\n    \n\n    this.formularioGroup= this.formBuilder.group({\n      nombreApellido: ['', [Validators.minLength(3), Validators.maxLength(100), Validators.required]],\n      usuario1: ['', [Validators.minLength(3), Validators.maxLength(80), Validators.required]],\n      password: ['', Validators.required],\n      email: ['', [Validators.email,Validators.required]],\n      idRol: [Validators.required]\n    })\n\n    this.usuario = new ComandoUsuario();\n\n    // this.subscription.add(\n    //   this.rolService.getAllRoles().subscribe({\n    //     next: (listado: Rol[]) => {\n    //       this.roles = listado;\n    //     },\n    //     error: () => {\n    //       alert('error al obtener roles');\n    //     },\n    //   })\n    // );\n\n    \n  }\n  async cargarRoles() {\n    this.subscription.add(\n      this.rolService.getAllRoles().subscribe((data)=>{\n        if(data.ok){\n          this.listaRoles=data.listaRoles;\n          //alert(this.listaRoles[0].nombreRol)\n        }\n          \n        else{\n          Swal.fire({\n            title: 'Error al obtener el listado de roles',\n            icon: 'error',\n            confirmButtonText: \"Ok\"\n          });\n        }\n      }  \n      )      \n    );\n  }\n\n  // guardar() {\n  //   if (this.formularioGroup.valid) {\n  //     console.log(this.usuario)\n  //     this.subscription.add(\n  //       this.userService.postCreate(this.formularioGroup).subscribe({\n  //         next: () => {\n  //           this.irAHome();\n  //         },\n  //         error: () => {\n  //           alert('error al guardar');\n  //         },\n  //       })\n  //     );\n  //   }\n  // }\n\n  guardar() {\n    if (this.formularioGroup.valid) {\n      this.usuario.nombreApellido = this.formularioGroup.value.nombreApellido;\n      this.usuario.usuario1 = this.formularioGroup.value.usuario1;\n      this.usuario.email = this.formularioGroup.value.email;\n      this.usuario.idRol = this.formularioGroup.value.idRol;\n      this.usuario.password = this.formularioGroup.value.password;\n\n      this.subscription.add(\n        this.userService.postCreate(this.usuario).subscribe({\n          next: (respuesta: ComandoUsuario) => {\n            if (respuesta.ok) {\n              Swal.fire({\n                title: 'Usuario cargado con éxito',\n                icon: 'success',\n                confirmButtonText: 'Ok',\n              }).then(() => {\n                this.cancelar();\n              });\n            } else {\n              alert('No se pudo crear el usuario');\n            }\n          },\n          error: (err: any) => {\n            console.error(err);\n            alert('Error al crear el usuario');\n          }\n        })\n      );\n    }\n  }\n  \n\n  cancelar() {\n    Swal.fire({\n      title: '¿Está seguro que quiere cancelar la operación?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si',\n      cancelButtonText: 'No'\n    }).then((result) => {\n      \n        this.router.navigate(['']);\n\n    })\n\n    this.irAHome();\n  }\n\n  private irAHome() {\n    this.router.navigate(['']);\n  }\n\n  get controlNombre() : FormControl{\n    return this.formularioGroup.controls['nombreApellido'] as FormControl\n  }\n\n  get controlUsuario() : FormControl{\n    return this.formularioGroup.controls['usuario1'] as FormControl\n  }\n\n  get controlPassword() : FormControl{\n    return this.formularioGroup.controls['password'] as FormControl\n  }\n\n  get controlEmail() : FormControl{\n    return this.formularioGroup.controls['email'] as FormControl\n  }\n\n  get controlRol() : FormControl{\n    return this.formularioGroup.controls['idRol'] as FormControl\n  }\n\n\n\n}\n\n","<form [formGroup]=\"formularioGroup\" *ngIf=\"formularioGroup.value\">\n    <div class=\"mb-3\">\n        <label for=\"nombreApellido\" class=\"form-label\">Nombre y Apellido</label>\n        <input type=\"text\" formControlName=\"nombreApellido\" id=\"nombreApellido\">\n        <div *ngIf=\"controlNombre.touched && controlNombre.invalid\" class=\"alert alert-danger\" role=\"alert\">\n            Nombre y Apellido es requerido\n        </div> \n    </div>\n    <br>\n    <div class=\"mb-3\">\n        <label for=\"usuario1\" class=\"form-label\">Usuario</label>\n        <input type=\"text\" formControlName=\"usuario1\" id=\"usuario1\">\n        <div *ngIf=\"controlUsuario.touched && controlUsuario.hasError('required')\" class=\"alert alert-danger\" role=\"alert\">\n            Usuario es requerido\n        </div>\n    </div>\n    <br>\n    <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label\">Password</label>\n        <input type=\"password\" formControlName=\"password\" id=\"password\">\n        <div *ngIf=\"controlPassword.touched && controlPassword.hasError('required')\" class=\"alert alert-danger\" role=\"alert\">\n            Password es requerido\n        </div>\n    </div>\n    <br>\n    <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input type=\"email\" formControlName=\"email\" id=\"email\">\n        <div *ngIf=\"controlEmail.touched && controlEmail.hasError('required')\" class=\"alert alert-danger\" role=\"alert\">\n            Email es requerido\n        </div>\n    </div>\n    <br>\n        <div class=\"mb-3\">\n            <label for=\"idRol\" class=\"form-label\">Rol:</label>\n                <select  class=\"form-select\" id=\"idRol\" formControlName=\"idRol\" >\n                    <option *ngFor=\"let rol of listaRoles\" [value]=\"rol.idRol\">\n                {{ rol.nombreRol }}\n                    </option>\n                </select>\n        </div>\n    <br>\n    \n\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"guardar()\">Guardar</button>\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancelar()\">Cancelar</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}