{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UsuarioService {\n  constructor() {}\n  /* AUTHENTICATION SERVICES */\n  authenticateUser(view) {\n    let token = this.getToken();\n    if (token != \"\" && token != null) {\n      let rol = this.getRol();\n      var viewRol = view.concat('_').concat(rol);\n      if (this.userMapping.includes(viewRol)) {\n        return true;\n      }\n      return false;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)();\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,cAAc;EAEzBC,eAAgB;EAGhB;EACAC,gBAAgB,CAACC,IAAY;IAC3B,IAAIC,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;IAC3B,IAAGD,KAAK,IAAI,EAAE,IAAIA,KAAK,IAAI,IAAI,EAAE;MAC/B,IAAIE,GAAG,GAAG,IAAI,CAACC,MAAM,EAAE;MACvB,IAAIC,OAAO,GAAGL,IAAI,CAACM,MAAM,CAAC,GAAG,CAAC,CAACA,MAAM,CAACH,GAAG,CAAC;MAC1C,IAAG,IAAI,CAACI,WAAW,CAACC,QAAQ,CAACH,OAAO,CAAC,EAAE;QACrC,OAAO,IAAI;;MAEb,OAAO,KAAK;KACb,MAAM;MACL,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAnBWb,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFb;AAAM","names":["UsuarioService","constructor","authenticateUser","view","token","getToken","rol","getRol","viewRol","concat","userMapping","includes","router","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Services\\Usuario\\Usuario\\usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  constructor() { }\n\n\n  /* AUTHENTICATION SERVICES */\n  authenticateUser(view: string) {\n    let token = this.getToken();\n    if(token != \"\" && token != null) {\n      let rol = this.getRol();\n      var viewRol = view.concat('_').concat(rol);\n      if(this.userMapping.includes(viewRol)) {\n        return true;\n      }\n      return false;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}