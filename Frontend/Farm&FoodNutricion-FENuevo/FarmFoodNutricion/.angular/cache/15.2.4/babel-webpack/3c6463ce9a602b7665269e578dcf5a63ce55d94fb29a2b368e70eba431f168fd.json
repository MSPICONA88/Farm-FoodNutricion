{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Swal from 'sweetalert2';\nlet LoginComponent = class LoginComponent {\n  constructor(router, loginServ) {\n    this.router = router;\n    this.loginServ = loginServ;\n    this.user = {};\n  }\n  ngOnInit() {}\n  login() {\n    if (this.validateParams()) {\n      this.loginServ.postLogin(this.user.usuario, this.user.password).subscribe({\n        next: response => {\n          this.user = response;\n          // this.loginServ.setToken(this.user.id_usuario.toString(), this.user.usuario, \n          //       this.user.nombre_rol);\n          Swal.fire({\n            title: 'Bienvenido',\n            icon: 'warning',\n            confirmButtonText: \"Ok\"\n          });\n          //      this.router.navigate(['/']);\n        },\n\n        error: err => {\n          if (err.status == 404 /* HttpStatusCode.NotFound */) {\n            Swal.fire({\n              title: 'Usuario y/o contrase単a incorrecta',\n              icon: 'warning',\n              confirmButtonText: \"Ok\"\n            });\n          }\n          if (err.status == 500 /* HttpStatusCode.InternalServerError */) {\n            Swal.fire({\n              title: 'Error en el Servicio',\n              icon: 'error',\n              confirmButtonText: \"Ok\"\n            });\n          }\n        }\n      });\n    } else {\n      Swal.fire({\n        title: 'Ingrese nombre de usuario y contrase単a',\n        icon: 'warning',\n        confirmButtonText: \"Ok\"\n      });\n    }\n  }\n  validateParams() {\n    if (this.user.usuario != null && this.user.usuario != \"\" && this.user.password != null && this.user.password != \"\") {\n      return true;\n    }\n    return false;\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAIzC,OAAOC,IAAI,MAAM,aAAa;AAQvB,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,MAAa,EAAUC,SAAuB;IAA9C,WAAM,GAAND,MAAM;IAAiB,cAAS,GAATC,SAAS;IAFpD,SAAI,GAAG,EAAa;EAEkD;EAEtEC,QAAQ,IACR;EAEAC,KAAK;IACH,IAAG,IAAI,CAACC,cAAc,EAAE,EAAE;MAC3B,IAAI,CAACH,SAAS,CAACI,SAAS,CAAC,IAAI,CAACC,IAAI,CAACC,OAAO,EAAE,IAAI,CAACD,IAAI,CAACE,QAAQ,CAAC,CAACC,SAAS,CAAC;QACxEC,IAAI,EAAGC,QAAkB,IAAI;UACxB,IAAI,CAACL,IAAI,GAAGK,QAAQ;UACpB;UACA;UAEMd,IAAI,CAACe,IAAI,CAAC;YACRC,KAAK,EAAE,YAAY;YACnBC,IAAI,EAAE,SAAS;YACfC,iBAAiB,EAAE;WACpB,CAAC;UACR;QACN,CAAC;;QACAC,KAAK,EAAGC,GAAsB,IAAI;UAC7B,IAAGA,GAAG,CAACC,MAAM,uCAA6B;YACxCrB,IAAI,CAACe,IAAI,CAAC;cACRC,KAAK,EAAE,mCAAmC;cAC1CC,IAAI,EAAE,SAAS;cACfC,iBAAiB,EAAE;aACpB,CAAC;;UAEJ,IAAGE,GAAG,CAACC,MAAM,kDAAwC;YACnDrB,IAAI,CAACe,IAAI,CAAC;cACRC,KAAK,EAAE,sBAAsB;cAC7BC,IAAI,EAAE,OAAO;cACbC,iBAAiB,EAAE;aACtB,CAAC;;QAEP;OACD,CAAC;KACA,MAAM;MACLlB,IAAI,CAACe,IAAI,CAAC;QACRC,KAAK,EAAE,wCAAwC;QAC/CC,IAAI,EAAE,SAAS;QACfC,iBAAiB,EAAE;OACpB,CAAC;;EAEN;EAEAX,cAAc;IACZ,IAAG,IAAI,CAACE,IAAI,CAACC,OAAO,IAAI,IAAI,IAAI,IAAI,CAACD,IAAI,CAACC,OAAO,IAAI,EAAE,IACnD,IAAI,CAACD,IAAI,CAACE,QAAQ,IAAI,IAAI,IAAI,IAAI,CAACF,IAAI,CAACE,QAAQ,IAAI,EAAE,EAAE;MACtD,OAAO,IAAI;;IAEjB,OAAO,KAAK;EACd;CAGD;AA5DYV,cAAc,eAL1BF,SAAS,CAAC;EACTuB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWvB,cAAc,CA4D1B;SA5DYA,cAAc","names":["Component","Swal","LoginComponent","constructor","router","loginServ","ngOnInit","login","validateParams","postLogin","user","usuario","password","subscribe","next","response","fire","title","icon","confirmButtonText","error","err","status","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\magal\\OneDrive\\Documents\\GitHub\\Farm-FoodNutricion\\Frontend\\Farm&FoodNutricion-FENuevo\\FarmFoodNutricion\\src\\app\\Componentes\\login\\login.component.ts"],"sourcesContent":["import { HttpErrorResponse, HttpStatusCode } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/Interfaces/usuario';\nimport { LoginService } from 'src/app/Services/login.service';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\n  user = {} as Usuario;\n\n  constructor(private router:Router, private loginServ: LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    if(this.validateParams()) {\n\t\t\tthis.loginServ.postLogin(this.user.usuario, this.user.password).subscribe({\n\t\t\t  next: (response : Usuario) => {\n          this.user = response;\n          // this.loginServ.setToken(this.user.id_usuario.toString(), this.user.usuario, \n          //       this.user.nombre_rol);\n\n                Swal.fire({\n                  title: 'Bienvenido',\n                  icon: 'warning',\n                  confirmButtonText: \"Ok\",\n                });\n          //      this.router.navigate(['/']);\n\t\t\t\t},\n\t\t\t  error: (err: HttpErrorResponse) => {\n          if(err.status == HttpStatusCode.NotFound) {\n            Swal.fire({\n              title: 'Usuario y/o contrase単a incorrecta',\n              icon: 'warning',\n              confirmButtonText: \"Ok\",\n            });\n          }\n          if(err.status == HttpStatusCode.InternalServerError) {\n            Swal.fire({\n              title: 'Error en el Servicio',\n              icon: 'error',\n              confirmButtonText: \"Ok\",\n          });\n          }\n\t\t\t  },\n\t\t\t})\n    } else {\n      Swal.fire({\n        title: 'Ingrese nombre de usuario y contrase単a',\n        icon: 'warning',\n        confirmButtonText: \"Ok\",\n      });\n    }\n  }\n\n  validateParams() : boolean {\n    if(this.user.usuario != null && this.user.usuario != \"\" &&\n        this.user.password != null && this.user.password != \"\") {\n          return true;\n    }\n    return false;\n  }\n\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}